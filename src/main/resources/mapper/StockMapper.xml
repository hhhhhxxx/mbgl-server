<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hhhhhx.mbgl.mapper.StockMapper">



    <resultMap id="StockCombineDTOMap" type="com.hhhhhx.mbgl.dto.StockCombineDTO">
        <result column="drug_id" property="drugId" jdbcType="INTEGER"/>
        <result column="quantity" property="quantity" jdbcType="INTEGER"/>
    </resultMap>


    <resultMap id="StockItemWithValueDTOMap" type="com.hhhhhx.mbgl.dto.StockItemWithValueDTO">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="version" property="drugId" jdbcType="INTEGER"/>
        <result column="drug_id" property="drugId" jdbcType="INTEGER"/>
        <result column="quantity" property="quantity" jdbcType="INTEGER"/>
        <result column="price" property="price" jdbcType="INTEGER"/>
    </resultMap>



    <select id="getStockCombineDTOByDrugIds" resultMap="StockCombineDTOMap">
        select drug_id, sum(quantity) as quantity from mbgl.t_stock s
        where drug_id in
        <foreach collection="drugIds" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        and quantity > 0
        GROUP BY s.drug_id order by FIELD(drug_id,
        <foreach collection="drugIds" item="item" open="" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getStockItemWithValueDTOByDrugIds" resultMap="StockItemWithValueDTOMap">
        select s.id,s.drug_id,s.quantity,s.version,d.price from mbgl.t_stock s
        inner join mbgl.t_drug d on d.id = s.drug_id
        where drug_id in
        <foreach collection="drugIds" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        and quantity > 0
        order by FIELD(drug_id,
        <foreach collection="drugIds" item="item" open="" separator="," close=")">
            #{item}
        </foreach>
        ,quantity
    </select>


    <update id="updateManyStock">
        update mbgl.t_stock
        <trim prefix="set" suffixOverrides=",">
            <trim prefix=" quantity = case " suffix="end,">
                <foreach collection="update_list" item="item">
                    when id = #{item.id} and quantity >= #{item.quantity}
                    then quantity - #{item.quantity}
                </foreach>
                else quantity
            </trim>
            <trim prefix=" version = case " suffix="end">
                <foreach collection="update_list" item="item">
                    when id = #{item.id} and quantity >= #{item.quantity}
                    then version + 1
                </foreach>
                else version
            </trim>
        </trim>
        <where>
            id in
            <foreach collection="update_list" item="item" open="(" separator="," close=")">
                #{item.id}
            </foreach>
        </where>
    </update>

    <select id="getDangerStock" resultType="stock">
        select * from mbgl.t_stock s
        inner join mbgl.t_drug d on d.id = s.drug_id
        where s.level = 0 and  ( DATE_SUB(DATE_ADD(s.prod_time, INTERVAL d.valid_month month),INTERVAL 6 month) &lt; DATE_FORMAT( NOW( ), '%Y-%m-%d' )
         or DATE_ADD(s.prod_time, INTERVAL d.valid_month month) &lt; DATE_FORMAT( NOW( ), '%Y-%m-%d' ) )
    </select>

    <update id="updateDangerStock">
        update mbgl.t_stock s inner join mbgl.t_drug d on d.id = s.drug_id
        <trim prefix="set" suffixOverrides=",">
            <trim prefix=" level = case " suffix="end">
                when DATE_ADD(s.prod_time, INTERVAL d.valid_month month) &lt; DATE_FORMAT( NOW( ), '%Y-%m-%d' )
                then s.level + 3
                when DATE_SUB(DATE_ADD(s.prod_time, INTERVAL d.valid_month month),INTERVAL 1 month) &lt; DATE_FORMAT( NOW( ), '%Y-%m-%d' )
                then s.level + 2
                when DATE_SUB(DATE_ADD(s.prod_time, INTERVAL d.valid_month month),INTERVAL 6 month) &lt; DATE_FORMAT( NOW( ), '%Y-%m-%d' )
                then s.level + 1
                else 0
            </trim>
        </trim>
        <where>
            s.id in
            <foreach collection="update_list" item="item" open="(" separator="," close=")">
                #{item.id}
            </foreach>
        </where>
    </update>

</mapper>
